<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.yedam.moa.community.mapper.CommunityMapper">

	<!-- 취업Q&A 게시글 기본키부여 -->
	<select id="jobQnaKey" resultType="String">
		SELECT 'EQT'|| EMPL_QST_SEQ.NEXTVAL as qaNotiwrNo
		  FROM DUAL
	</select>

	<!-- 취업Q&A 게시글 등록 -->
	<insert id="jobQnaInsert" parameterType="CommunityVO">
		INSERT INTO EMPL_QST(   QA_NOTIWR_NO
							  , TTL
							  , ID
							  , CNTN
							  , HTML_CNTN
							  , REG_DT )
		VALUES (  #{qaNotiwrNo}
			  	, #{ttl}
			  	, #{id}
			  	, #{cntn}
			  	, #{htmlCntn}
			  	, TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS'))
			  	
	</insert>

	<!-- 취업Q&A 게시글 목록 조회 -->
	<select id="jobQnaList" resultType="CommunityVO">
	
	<![CDATA[	
		SELECT * FROM (
		     SELECT ROWNUM AS rnum, a.* FROM (
		        SELECT  eq.QA_NOTIWR_NO
			          , eq.TTL
			          , eq.ID
			          , eq.CNTN
			          , eq.HTML_CNTN
			          , eq.INQ_CNT
			          , eq.RPLY_CNT
			          , eq.REG_DT
			          , eq.RECO_CNT
			          , m.PROFILE_IMG
			      FROM EMPL_QST eq
			      JOIN MEMBER m
			        ON eq.id = m.id    
			     ORDER BY QA_NOTIWR_NO DESC ) a WHERE rownum <= #{page}*#{perPageNum}
			) WHERE RNUM > #{pageStart} ]]>
	
	</select>
	
	<!-- 취업 Q&A 게시글 총 갯수 -->
	<select id="jobQnaListCnt" resultType="int">
		SELECT COUNT(*)
		  FROM EMPL_QST
	</select>
	
	<!-- 취업 Q&A 게시글 Best5 출력 추천, 댓글, 조회수순 -->
	<select id="jobQnaBest" resultType="CommunityVO">
		<![CDATA[ SELECT *
				    FROM (
					  SELECT QA_NOTIWR_NO, TTL, ID, CNTN, HTML_CNTN, INQ_CNT, RPLY_CNT, REG_DT, RECO_CNT
					  FROM EMPL_QST
					  ORDER BY RECO_CNT DESC, RPLY_CNT DESC, INQ_CNT DESC
				    )
				   WHERE ROWNUM <= 5 ]]>
	</select>
	
	<!-- 취업Q&A 상세 페이지 조회 -->
	<select id="jobQnaDetail" resultType="CommunityVO">
		SELECT    eq.QA_NOTIWR_NO
				, eq.TTL
				, eq.ID
				, eq.CNTN
				, eq.HTML_CNTN
				, eq.INQ_CNT
				, eq.RPLY_CNT
				, eq.REG_DT
				, eq.RECO_CNT
                , m.PROFILE_IMG
		  FROM EMPL_QST eq
          JOIN MEMBER m
         	ON eq.id = m.id
		 WHERE QA_NOTIWR_NO = #{qaNotiwrNo}
	</select>
	
	<!-- 취업 Q&A 상세 페이지 추천등록 -->
	<insert id="jobQnaRecoAdd" parameterType="CommunityVO">
		INSERT INTO EMPL_RECO(QA_NOTIWR_NO, id)
		VALUES(#{qaNotiwrNo}, #{id})
	</insert>
	
	<!-- 취업 Q&A 상세 페이지 추천여부 0: 미추천 , 1 : 추천 -->
	<select id="jobQnaReco" resultType="int">
		SELECT COUNT(*)
		  FROM EMPL_RECO
		 WHERE QA_NOTIWR_NO = #{qaNotiwrNo} 
		   AND id = #{id}
	</select>
	
	<!-- 취업 Q&A 조회수 기능 -->
	<update id="jobQnaRecoCount" parameterType="String">
		UPDATE EMPL_QST
		   SET RECO_CNT = TO_NUMBER(RECO_CNT) + 1
		 WHERE QA_NOTIWR_NO = #{qaNotiwrNo}
	</update>
	
	
	<!-- 취업 Q&A 수정 기능 -->
	<update id="jobQnaModFn" parameterType="String">
		UPDATE EMPL_QST
		<set>
			 <if test="ttl != null and !ttl.equals('')">
				 ttl = #{ttl},
			 </if>
			 <if test="cntn != null and !cntn.equals('')">
				 cntn = #{cntn},
			 </if>
			 <if test="htmlCntn != null and !htmlCntn.equals('')">
				 HTML_CNTN = #{htmlCntn}
			 </if>
		</set>
		WHERE QA_NOTIWR_NO = #{qaNotiwrNo}
	</update>
	
	
	<!-- 취업 Q&A 게시글 삭제 기능 : 프로시저 호출 -->
	<delete id="jobQnaDelete" statementType="CALLABLE" parameterType="String">
		{ 
      		call EMPL_QST_Delete_PRO(#{qaNotiwrNo})
   		}
	</delete>
	

	<!-- 취업 Q&A 조회수 기능 -->
	<update id="jobQnaView" parameterType="String">
		UPDATE EMPL_QST
		   SET INQ_CNT = TO_NUMBER(INQ_CNT) + 1
		 WHERE QA_NOTIWR_NO = #{qaNotiwrNo}
	</update>
	
	<!-- 취업 Q&A 댓글 등록 -->
	<insert id="qnaReplyAdd" parameterType="ReplyVO">
		<selectKey keyProperty="rplyNo" resultType="String" order="BEFORE">
		 	SELECT 'EQR'|| EMPL_RPLY_SEQ.NEXTVAL as rplyNo
			FROM DUAL
		</selectKey>
		
		INSERT INTO EMPL_RPLY(  RPLY_NO
							  , QA_NOTIWR_NO
							  , ID
							  , RPLY_CNTN
							  , RPLY_GROUP )
			 VALUES (  #{rplyNo}
			 		 , #{qaNotiwrNo}
			 		 , #{id}
			 		 , #{rplyCntn}
			 		 , #{rplyNo}
			 		)
	</insert>
	
	<!-- 취업 Q&A 댓글수 증가 기능 -->
	<update id="jobQnaReplyCount" parameterType="String">
		UPDATE EMPL_QST
		   SET RPLY_CNT = TO_NUMBER(RPLY_CNT)+1
		 WHERE QA_NOTIWR_NO = #{qaNotiwrNo}
	</update>
	
	
	<!-- 취업 Q&A 대댓글 등록 -->
	<insert id="chQnaReplyAdd" parameterType="ReplyVO">
		<selectKey keyProperty="rplyNo" resultType="String" order="BEFORE">
		 	SELECT 'EQR'|| EMPL_RPLY_SEQ.NEXTVAL as rplyNo
			FROM DUAL
		</selectKey>
		INSERT INTO EMPL_RPLY(  RPLY_NO
							  , QA_NOTIWR_NO
							  , ID
							  , RPLY_CNTN
							  , RPLY_DEPTH
							  , RPLY_GROUP )
			 VALUES (  #{rplyNo}
			 		 , #{qaNotiwrNo}
			 		 , #{id}
			 		 , #{rplyCntn}
			 		 , #{rplyDepth}
			 		 , #{rplyGroup}
			 		)
	</insert>
	
	<!-- 취업 Q&A 모댓글 리스트 출력 -->
	<select id="qnaReplyList" resultType="ReplyVO">
		SELECT   er.RPLY_NO
			   , er.QA_NOTIWR_NO
			   , er.ID
               , er.RPLY_CNTN
			   , er.REG_DT
			   , er.RPLY_DEPTH
			   , er.RPLY_GROUP
			   , er.RPLY_DEL_YN 
               , m.PROFILE_IMG
		  FROM EMPL_RPLY er
          JOIN MEMBER m
            ON er.id = m.id
		 WHERE QA_NOTIWR_NO = #{qaNotiwrNo} 
		   AND RPLY_DEPTH = #{rplyDepth}
		 ORDER BY REG_DT
	</select>
	
	<!-- 모댓글에 대한 자식 댓글들 리스트 -->
	<select id="childReplyList" resultType="ReplyVO">
		SELECT   er.RPLY_NO
		       , er.QA_NOTIWR_NO
		       , er.ID
               , er.RPLY_CNTN
		       , er.REG_DT
		       , er.RPLY_DEPTH
		       , er.RPLY_GROUP
		       , er.RPLY_DEL_YN
               , m.PROFILE_IMG
		 FROM EMPL_RPLY er
         JOIN MEMBER m
           ON er.id = m.id
		WHERE RPLY_DEPTH = #{rplyDepth}
		  AND RPLY_GROUP = #{rplyGroup}
		ORDER BY REG_DT
	</select>
	
	<!-- 취업 Q&A 댓글 수정 -->
	<update id="qnaReplyMod" parameterType="ReplyVO">
		UPDATE EMPL_RPLY
		   SET RPLY_CNTN = #{rplyCntn}
		 WHERE RPLY_NO = #{rplyNo}
	</update>
	
	<!-- 취업 Q&A 댓글 삭제 -->
	<update id="qnaReplyDelete" parameterType="ReplyVO">
		UPDATE EMPL_RPLY
		   SET RPLY_DEL_YN = 'Y'
		 WHERE RPLY_NO = #{rplyNo}
	</update>
	
	
	<!-- 면접 후기 등록 -->
	<insert id="jobInterviewInsert" parameterType="IntrvVO">
		<selectKey keyProperty="intrvNo" resultType="String" order="BEFORE">
		 	SELECT 'ITV'|| INTRV_SCRN_SEQ.NEXTVAL as intrvNo
			FROM DUAL
		</selectKey>
		INSERT INTO INTRV_SCRN(	  intrv_no
								, co_nm
								, duty
								, carr
								, appr
								, dif
								, intrv_typ
								, intrv_rcnt
								, spc_ctnt
								, pass_yn
								, id
								, intrv_img
								, qst_cntn
								, intrv_dt
								, reg_dt)
		VALUES (  #{intrvNo}
				, #{coNm}
				, #{duty}
				, #{carr}
				, #{appr}
				, #{dif}
				, #{intrvTyp}
				, #{intrvRcnt}
				, #{spcCtnt}
				, #{passYn}
				, #{id}
				, #{intrvImg}
				, #{qstCntn}
				, #{intrvDt}
				, TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS'))
	</insert>
	
	<!-- 면접후기 리스트 출력 -->
	<select id="jobInterviewList" resultType="IntrvVO">
		SELECT INTRV_NO
		       , ID
		       , CO_NM
		       , get_common(DUTY) as duty
		       , get_common(CARR) as carr
		       , get_common(APPR) as appr
		       , get_common(DIF)  as dif
		       , get_common(INTRV_TYP) as intrvTyp
		       , get_common(INTRV_RCNT) as intrvRcnt
		       , get_common(PASS_YN) as passYn
		       , INTRV_IMG
		       , QST_CNTN
		       , SPC_CTNT
		       , REG_DT
		       , ACCP_YN
		       , INTRV_DT
		FROM intrv_scrn
		WHERE ACCP_DT IS NOT NULL
		<if test="duty != null and !duty.equals('')">
	    	AND duty = #{duty}
	    </if>
	    <if test="carr != null and !carr.equals('')">
	    	AND carr = #{carr}
	    </if>
	    <if test="coNm != null and !coNm.equals('')">
	    	AND UPPER(CO_NM) LIKE '%' || UPPER(#{coNm}) || '%'
	    </if>
		ORDER BY REG_DT DESC, INTRV_DT DESC
	</select>
	
	<!-- 프로젝트 모집 등록 -->
	<insert id="projectInsert" parameterType="PrjtVO">
	
		<selectKey keyProperty="prjtNo" resultType="String" order="BEFORE">
		 	SELECT 'PRJ'|| PRJT_SEQ.NEXTVAL as prjtNo
			FROM DUAL
		</selectKey>
		
		INSERT INTO PRJT( 	PRJT_NO
						  , ID
						  , PROG_MTHD
						  , COLL_RCNT
						  , PROG_TERM
						  , SKILL
						  , COLL_POSI
						  , COCT_MTHD
						  , CONTACT
						  , TTL
						  , CNTN
						  , EXPC_DT
						  , COLL_ST
						  , CLS_DT
						  , REG_DT)
		VALUES (  #{prjtNo}
				, #{id}
				, #{progMthd}
				, #{collRcnt}
				, #{progTerm}
				, #{skill}
				, #{collPosi}
				, #{coctMthd}
				, #{contact}
				, #{ttl}
				, #{cntn}
				, #{expcDt}
				, #{collSt}
				, #{clsDt}
				, TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS'))
	</insert>
	
	<!-- 프로젝트 모집 리스트 -->
	<select id="projectList" resultType="PrjtVO">
		SELECT p.PRJT_NO
		       , get_common(p.PROG_MTHD) as progMthd
		       , p.COLL_RCNT
		       , get_common(p.PROG_TERM) as progTerm
		       , p.SKILL
		       , get_common(p.COLL_POSI) as collPosi
		       , get_common(p.COCT_MTHD) as coctMthd
		       , p.TTL
		       , p.CNTN
		       , p.RPLY_CNT
		       , p.INQ_CNT
		       , p.EXPC_DT
		       , get_common(p.COLL_ST) as collSt
		       , p.CLS_DT
		       , p.ID
		       , p.REG_DT
		       , p.CONTACT
               , m.PROFILE_IMG
		FROM PRJT p
        JOIN MEMBER m
          ON p.id = m.id
        ORDER BY COLL_ST ASC , REG_DT DESC, PRJT_NO DESC
	</select>
	
	<!-- 프로젝트 모집 오늘날짜 오전 9시를 기준으로 모집 상태 update  -->
	<update id="projectCollstUpdate" parameterType="String">
		UPDATE PRJT
		   SET COLL_ST = 'h2'
		 WHERE PRJT_NO = #{prjtNo}
	</update>
	
	<!-- 프로젝트 모집 상세 -->
	<select id="projectDetail" resultType="PrjtVO">
		SELECT p.PRJT_NO
		       , get_common(p.PROG_MTHD) as progMthd
		       , p.COLL_RCNT
		       , get_common(p.PROG_TERM) as progTerm
		       , p.SKILL
		       , get_common(p.COLL_POSI) as collPosi
		       , get_common(p.COCT_MTHD) as coctMthd
		       , p.TTL
		       , p.CNTN
		       , p.RPLY_CNT
		       , p.INQ_CNT
		       , p.EXPC_DT
		       , get_common(p.COLL_ST) as collSt
		       , p.CLS_DT
		       , p.ID
		       , p.REG_DT
		       , p.CONTACT
               , m.PROFILE_IMG
		  FROM PRJT p
          JOIN MEMBER m
            ON p.id = m.id
		 WHERE prjt_no = #{prjtNo}
	</select>
	
	<!-- 프로젝트 모집 조회수 기능 -->
	<update id="projectView" parameterType="String">
		UPDATE PRJT
		   SET INQ_CNT = TO_NUMBER(INQ_CNT) + 1
		 WHERE PRJT_NO = #{prjtNo}
	</update>
	
	
	<!-- 프로젝트 모집 수정 -->
	<update id="projectModFn" parameterType="PrjtVO">
		UPDATE PRJT
		  <set> 
		  	   <if test="progMthd != null and !progMthd.equals('')">
		   	   		PROG_MTHD = #{progMthd}, 
		   	   </if>
		   	   <if test="collRcnt != null and !collRcnt.equals('')">
		       		COLL_RCNT = #{collRcnt},
		       </if>
		       <if test="progTerm != null and !progTerm.equals('')">
		       		PROG_TERM = #{progTerm},
		       </if>
		       <if test="skill != null and !skill.equals('')">
		       		SKILL = #{skill},
		       </if>
		       <if test="collPosi != null and !collPosi.equals('')">
		       		COLL_POSI = #{collPosi},
		       </if>
		       <if test="coctMthd != null and !coctMthd.equals('')">
		      		COCT_MTHD = #{coctMthd},
		       </if>
		       <if test="contact != null and !contact.equals('')">
		       		CONTACT = #{contact},
		       </if>
		       <if test="ttl != null and !ttl.equals('')">
		       		TTL = #{ttl},
		       </if>
		       <if test="cntn != null and !cntn.equals('')">
		       		CNTN = #{cntn},
		       </if>
		       <if test="expcDt != null and !expcDt.equals('')">
		       		EXPC_DT = #{expcDt},
		       </if>
		       <if test="collSt != null and !collSt.equals('')">
		       		COLL_ST = #{collSt},
		       </if>
		       <if test="clsDt != null and !clsDt.equals('')">
		      		CLS_DT = #{clsDt}
		       </if>
		  </set>
		 WHERE PRJT_NO = #{prjtNo}
	</update>
	
	
	<!-- 프로젝트 모집 삭제 : 프로시저 호출 -->
	<delete id="projectDelFn" statementType="CALLABLE" parameterType="String">
		{ 
      		call PRJT_Delete_PRO(#{prjtNo})
   		}
	</delete>
	
	<!-- 프로젝트모집 댓글 리스트 출력 -->
	<select id="projectReplyList" resultType="ReplyVO">
		SELECT   pr.RPLY_NO
			   , pr.PRJT_NO
			   , pr.ID
			   , pr.RPLY_CNTN
			   , pr.REG_DT
			   , pr.RPLY_DEL_YN
               , m.PROFILE_IMG
		  FROM PRJT_RPLY pr
          JOIN MEMBER m
            ON pr.id = m.id
		 WHERE PRJT_NO = #{prjtNo}
		 ORDER BY REG_DT
	</select>
	
	<!-- 프로젝트 모집 댓글 등록 -->
	<insert id="projectReplyAdd" parameterType="ReplyVO">
		<selectKey keyProperty="rplyNo" resultType="String" order="BEFORE">
		 	SELECT 'PRR'|| PRJT_RPLY_SEQ.NEXTVAL as rplyNo
			FROM DUAL
		</selectKey>
		
		INSERT INTO PRJT_RPLY(  RPLY_NO
							  , PRJT_NO
							  , ID
							  , RPLY_CNTN )
			 VALUES (  #{rplyNo}
			 		 , #{prjtNo}
			 		 , #{id}
			 		 , #{rplyCntn}
			 		)
	</insert>
	
	
	<!-- 프로젝트 모집 댓글수 증가 기능 -->
	<update id="projectReplyCount" parameterType="String">
		UPDATE PRJT
		   SET RPLY_CNT = TO_NUMBER(RPLY_CNT)+1
		 WHERE PRJT_NO = #{prjtNo}
	</update>
	
	<!-- 프로젝트 모집 댓글 수정 -->
	<update id="projectReplyMod" parameterType="ReplyVO">
		UPDATE PRJT_RPLY
		   SET RPLY_CNTN = #{rplyCntn}
		 WHERE RPLY_NO = #{rplyNo}
	</update>
	
	<!-- 프로젝트 모집 댓글 삭제 -->
	<update id="projectReplyDelete" parameterType="ReplyVO">
		UPDATE PRJT_RPLY
		   SET RPLY_DEL_YN = 'Y'
		 WHERE RPLY_NO = #{rplyNo}
	</update>
	
	<!-- 스터디 모집 등록 -->
	<insert id="studyInsert" parameterType="StudyVO">
		<selectKey keyProperty="studyNo" resultType="String" order="BEFORE">
		 	SELECT 'STD'|| STUDY_SEQ.NEXTVAL as studyNo
			FROM DUAL
		</selectKey>
		INSERT INTO STUDY(  STUDY_NO
						  , ID
						  , STUDY_FG
						  , TTL
						  , CNTN
						  , STUDY_SJT
						  , PROG_MTHD
						  , COLL_RCNT
						  , COCT_MTHD
						  , CONTACT
						  , EXPC_DT
						  , PROG_TERM
						  , CLS_DT
						  , COLL_ST
						  , REG_DT)
		VALUES (  #{studyNo}
				, #{id}
				, #{studyFg}
				, #{ttl}
				, #{cntn}
				, #{studySjt}
				, #{progMthd}
				, #{collRcnt}
				, #{coctMthd}
				, #{contact}
				, #{expcDt}
				, #{progTerm}
				, #{clsDt}
				, #{collSt}
				, TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS'))
	</insert>
	
	<!-- 스터디 목록 리스트 -->
	<select id="studyList" resultType="StudyVO">
		SELECT 	 s.STUDY_NO
		       , get_common(s.study_fg) as studyFg
		       , get_common(s.prog_mthd) as progMthd
		       , s.ttl
		       , s.cntn
		       , get_common(s.coct_mthd) as coctMthd
		       , s.coll_rcnt
		       , s.rply_cnt
		       , s.inq_cnt
		       , s.expc_dt
		       , get_common(s.coll_st) as collSt
		       , s.cls_dt
		       , s.id
		       , s.reg_dt
		       , s.study_sjt
		       , s.contact
		       , get_common(s.prog_term) as progTerm
               , m.PROFILE_IMG
		  FROM STUDY s
          JOIN MEMBER m
            ON s.id = m.id
	  ORDER BY COLL_ST ASC, REG_DT DESC ,STUDY_NO DESC
	</select>
	
	<!-- 스터디 모집 오늘날짜 오전 9시를 기준으로 모집 상태 update  -->
	<update id="studyCollstUpdate" parameterType="String">
		UPDATE STUDY
		   SET COLL_ST = 'h2'
		 WHERE STUDY_NO = #{studyNo}
	</update>
	
	
	<!-- 스터디 모집 상세 -->
	<select id="studyDetail" resultType="StudyVO">
		SELECT	 s.STUDY_NO
		       , get_common(s.study_fg) as studyFg
		       , get_common(s.prog_mthd) as progMthd
		       , s.ttl
		       , s.cntn
		       , get_common(s.coct_mthd) as coctMthd
		       , s.coll_rcnt
		       , s.rply_cnt
		       , s.inq_cnt
		       , s.expc_dt
		       , get_common(s.coll_st) as collSt
		       , s.cls_dt
		       , s.id
		       , s.reg_dt
		       , s.study_sjt
		       , s.contact
		       , get_common(s.prog_term) as progTerm
               , m.PROFILE_IMG
		  FROM study s
          JOIN MEMBER m
            ON s.id = m.id
		WHERE STUDY_NO = #{studyNo}
	</select>
	
	<!-- 스터디 모집 조회수 기능 -->
	<update id="studyView" parameterType="String">
		UPDATE STUDY
		   SET INQ_CNT = TO_NUMBER(INQ_CNT) + 1
		 WHERE STUDY_NO = #{studyNo}
	</update>
	
	<!-- 스터디 모집 수정 기능 -->
	<update id="studyModFn" parameterType="StudyVO">
		UPDATE STUDY
		   <set> 
		   	   <if test="studyFg != null and !studyFg.equals('')">
		   			STUDY_FG = #{studyFg},
		   	   </if>
		   	   <if test="ttl != null and !ttl.equals('')">
		       		TTL = #{ttl},
		       </if>
		       <if test="cntn != null and !cntn.equals('')">
		       		CNTN = #{cntn},
		       </if>
		       <if test="studySjt != null and !studySjt.equals('')">
		       		STUDY_SJT = #{studySjt},
		       </if>
		       <if test="progMthd != null and !progMthd.equals('')">
		       		PROG_MTHD = #{progMthd},
		       </if>
		       <if test="collRcnt != null and !collRcnt.equals('')">
		       		COLL_RCNT = #{collRcnt},
		       </if>
		       <if test="coctMthd != null and !coctMthd.equals('')">
		       		COCT_MTHD = #{coctMthd},
		       </if>
		       <if test="contact != null and !contact.equals('')">
		       		CONTACT = #{contact},
		       </if>
		       <if test="expcDt != null and !expcDt.equals('')">
		       		EXPC_DT = #{expcDt},
		       </if>
		       <if test="progTerm != null and !progTerm.equals('')">
		       		PROG_TERM = #{progTerm},
		       </if>
		       <if test="clsDt != null and !clsDt.equals('')">
		       		CLS_DT = #{clsDt},
		       </if>
		       <if test="collSt != null and !collSt.equals('')">
		       		COLL_ST = #{collSt}
		       </if>
		  </set>
		 WHERE STUDY_NO = #{studyNo}
	</update>
	
	
	<!-- 스터디 모집 삭제 기능 : 프로시저 호출 -->
	<delete id="studyDelFn" statementType="CALLABLE" parameterType="String">
		{ 
      		call STUDY_Delete_PRO(#{studyNo})
   		}
	</delete>
	
	
	<!-- 스터디 모집 댓글 리스트 출력 -->
	<select id="studyReplyList" resultType="ReplyVO">
		SELECT   sr.RPLY_NO
			   , sr.STUDY_NO
			   , sr.ID
			   , sr.RPLY_CNTN
			   , sr.REG_DT
			   , sr.RPLY_DEL_YN
               , m.PROFILE_IMG
		  FROM STUDY_RPLY sr
          JOIN MEMBER m
            ON sr.id = m.id
		 WHERE sr.STUDY_NO = #{studyNo}
		 ORDER BY sr.REG_DT
	</select>
	
	<!-- 스터디 모집 댓글 등록 -->
	<insert id="studyReplyAdd" parameterType="ReplyVO">
		<selectKey keyProperty="rplyNo" resultType="String" order="BEFORE">
		 	SELECT 'STR'|| STUDY_RPLY_SEQ.NEXTVAL as rplyNo
			FROM DUAL
		</selectKey>
		
		INSERT INTO STUDY_RPLY( RPLY_NO
							  , STUDY_NO
							  , ID
							  , RPLY_CNTN )
			 VALUES (  #{rplyNo}
			 		 , #{studyNo}
			 		 , #{id}
			 		 , #{rplyCntn}
			 		)
	</insert>
	
	
	<!-- 스터디 모집 댓글수 증가 기능 -->
	<update id="studyReplyCount" parameterType="String">
		UPDATE STUDY
		   SET RPLY_CNT = TO_NUMBER(RPLY_CNT)+1
		 WHERE STUDY_NO = #{studyNo}
	</update>
	
	<!-- 스터디 모집 댓글 수정 -->
	<update id="studyReplyMod" parameterType="ReplyVO">
		UPDATE STUDY_RPLY
		   SET RPLY_CNTN = #{rplyCntn}
		 WHERE RPLY_NO = #{rplyNo}
	</update>
	
	<!-- 스터디 모집 댓글 삭제 -->
	<update id="studyReplyDelete" parameterType="ReplyVO">
		UPDATE STUDY_RPLY
		   SET RPLY_DEL_YN = 'Y'
		 WHERE RPLY_NO = #{rplyNo}
	</update>
	
	
	<!-- 면접후기 단건: 관리자 -->
	<select id="selectITVDetail" resultType="IntrvVO">
		SELECT INTRV_NO
		       , ID
		       , CO_NM
		       , get_common(DUTY) as duty
		       , get_common(CARR) as carr
		       , get_common(APPR) as appr
		       , get_common(DIF)  as dif
		       , get_common(INTRV_TYP) as intrvTyp
		       , get_common(INTRV_RCNT) as intrvRcnt
		       , get_common(PASS_YN) as passYn
		       , INTRV_IMG
		       , QST_CNTN
		       , SPC_CTNT
		       , REG_DT
		       , ACCP_YN
		       , INTRV_DT
		FROM intrv_scrn
		WHERE INTRV_NO = #{intrvNo}
		ORDER BY REG_DT DESC, INTRV_DT DESC
	</select>
	
	<!-- 면접 후기 삭제 기능 : 관리자 -->
	<delete id="interviewDelFn" parameterType="String">
		DELETE
		  FROM intrv_scrn
		 WHERE INTRV_NO = #{intrvNO}
	</delete>

</mapper>