노드서버 3000
port 3306
/////////////////////////////////////////
?????????????????????????????????????????
back(node.js) : http.creatServer() -> 굉장히 불편(reg.url, searchparmas 등)
                express(프레임워크 패키지) -> 편의성 높음 (router 등 사용)
                nodemon(개발에 도움을 주는 패키지) -> 소스변경시 리로드

서버에서 작업하고 있기때문에
console.log 값은 서버에서 확인(브라우저x)

app.use(express.urlencoded({ extended: false })) 이거뭐임????

Express 프레임워크
??????????????????????????????????????????
-------------------------------------------------------
1교시
fetch와 ajax는 서버와 페이지 사이에서 어떻게 보여주는지 결정?

express와 nodemon을 이용하여 
서버내 처리과정을 만드는 중? 서버구축 중?

app.route(), 라우터 매핑
post방식 작동하는지 확인하려면 부메랑 이용
-------------------------------------------------------
2교시
js는 프론트, 백 다 사용가능
front : DOM(브라우저 실행, 태그관리)
        Ajax(XHR,Fetch())
/////////////////////////////////////////////////////
정규표현식 p.66
정규 표현식 리터럴. 다음과 같이 슬래시로 패턴을 감싸서 작성합니다.
  const re = /ab+c/          

정규표현식을 이용해서 라우트 경로 찾기
  app.get("/ab+cd", (req, res) => {
  res.send("정규표현식");
});

//라우드 찾기위해 코드가 너무 길어지는 것에 대한 대책
express.router를 이용 다른 파일로 옮기기

node-project > routes > board.js
>
  const express = require('express');
  const route = express.Router();
  //매소드 타입별 라우트 찾기
  route
    .get("/", (req, res) => {
      res.send("board get");
    })
    .post("/", (req, res) => {
      res.send("board post");
    })
    .put("/", (req, res) => {
      res.send("board put");
    })
    .delete("/", (req, res) => {
      res.send("board delete");
    });
  module.exports = route;
///
app.js
> 
  const boardRouter = require("./routes/board");

  app.use(boardRouter);
------------------------------------------------------------
3교시
es6 변환
import from
export

from 다음 경로에 .js 확장자 추가

package.json
>
    "type": "module",
//////////////////////////////////////////
라우트 핸들러 p.121
핸들러가 2개인 경우 : next
////////////////////////////////////////////
Rest Parameter p.56
--------------------------------------------------------------------
4교시
express에서 에러 처리하기
->나중에
///////////////////////////////////////////
express에서 정적파일제공하기 p.127
01app.js 
public > logIn.html
public > main.html
---------------------------------------------------------------------
5교시
클라  ->  서버
   Parameter 종류
1.querystring - 
  /aaa?id=0
2.post(body) - 

3.json - 
  {},[]
4.path variable - 
  post/1

express에서 
req.body - json
req.query - query string
req.params - path variable
  ex) app.get("/posts/:id/:userid)
-------------------------------------------------------------------------
6교시
이 모든걸다 해주는 Express-generator (nodejs03.pdf)
npm install express-generator -g
express MyApp
cd MyApp
npm install

terminal에서 npm run start
localhost3000 확인
////////////////////////////////////////
expression-session p.134 (서버세션다루기)
---------------------------------------------------------------------------
7교시 삭제
---------------------------------------------------------------------------
8교시
promise???????????????
session/cookie



오늘 라우터 한것 중요










