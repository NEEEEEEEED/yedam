<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 연결할 인터 페이스 경로 -->
<mapper namespace="com.yedam.spring.mat.mapper.MatMapper">
<!-- 자재정보 전체 조회 -->
	<select id="matList" resultType="MatVO">
		SELECT *
		FROM rsc
	   ORDER BY use_yn DESC, RSC_CD
	</select>
<!-- 자재정보 단건 조회 -->
	<select id="selectMatInfo" resultType="MatVO">
	SELECT rsc_cd,
		   rsc_nm,
		   rsc_spec,
		   mng_unit,
		   rsc_typ,
		   saf_stc,
		   use_yn,
		   vend_cd,
		   vend_nm
	  FROM rsc
     WHERE rsc_cd = #{rscCd}
	</select>
<!-- 자재정보 등록 -->
	<insert id="insertMatInfo" parameterType="MatVO">
		INSERT INTO rsc (
		rsc_cd,
		rsc_nm,
		rsc_spec,
		mng_unit,
		rsc_typ,
		saf_stc,
		use_yn,
		vend_cd,
		vend_nm
		)
		VALUES (
		'RSC${rscCd}',
		#{rscNm},
		#{rscSpec},
		#{mngUnit},
		#{rscTyp},
		#{safStc},
		#{useYn},
		#{vendCd},
		#{vendNm}
		)
	</insert>
	<!--#{} : preparedStatement 들어오는 데이터를 sql에 맞게 타입을 맞춰줌
	${} : 타입 변경 없이 있는그대로 집어 넣음-->
	<!-- #은 타입에 따라서 숫자면 ''가 안 붙고 문자면 ''가 붙는데
	$는 타입상관없이 앞에것에 붙도록 한다.-->
	
	<!-- 수정 : 급여를 정해진 비율로 인상 2개의 다른 타입의 매개변수를 사용할 경우 parameterType 생략 -->
	<!-- <update id="updateEmpSal"> UPDATE employees SET salary = salary * (1+ 
		#{raise}/100) WHERE employee_id = #{empId} </update> -->
<!-- 자재정보 수정 -->
	<update id="updateMatInfo" parameterType="MatVO">
		UPDATE rsc
		<set>
			<if test="rscCd != null and !rscCd.equals('')">
				rsc_cd = #{rscCd},
			</if>
			<if test="rscNm != null and !rscNm.equals('')">
				rsc_nm = #{rscNm},
			</if>
			<if test="rscSpec != null and !rscSpec.equals('')">
				rsc_spec = #{rscSpec},
			</if>
			<if test="rscTyp != null and !rscTyp.equals('')">
				rsc_typ = #{rscTyp},
			</if>
			<if test="safStc > 0">
				saf_stc = #{safStc},
			</if>
			<if test="useYn != null and !useYn.equals('')">
				use_yn = #{useYn},
			</if>
			<if test="vendCd != null and !vendCd.equals('')">
				vend_cd = #{vendCd},
			</if>
			<if test="vendNm != null and !vendCd.equals('')">
				vend_nm = #{vendNm},
			</if>

		</set>
		WHERE rsc_cd = #{rscCd}
	</update>

<!-- 자재발주 전체 조회 -->
	<select id="matOrderAllList" resultType="MatVO">
		SELECT *
		FROM rsc_ordr
	   ORDER BY ordr_cd
	</select>
<!-- 자재발주 단건 조회 -->
	<select id="selectMatOrderInfo" resultType="MatVO">
	SELECT *
	  FROM rsc_ordr		   
     WHERE ordr_cd = #{ordrCd}	
	</select>
<!-- 자재발주 등록 -->
	<insert id="insertMatOrderInfo" parameterType="MatVO">
		INSERT INTO rsc_ordr (
		ordr_cd,
		ordr_req_dt,
		VEND_CD,
		RSC_CD,
		ORDR_CNT,
		PAPRD_CMND_DT,
		VEND_NM,
		RSC_NM
		)
		VALUES (
		#{ordrCd},
		#{ordrReqDt},
		#{vendCd},
		#{rscCd},
		#{ordrCnt},
		#{paprdCmndDt},
		#{vendNm},
		#{rscNm}
		)
	</insert>
	<!-- #은 타입에 따라서 숫자면 ''가 안 붙고 문자면 ''가 붙는데
	$는 타입상관없이 앞에것에 붙도록 한다.-->
	
	<!-- 수정 : 급여를 정해진 비율로 인상 2개의 다른 타입의 매개변수를 사용할 경우 parameterType 생략 -->
	<!-- <update id="updateEmpSal"> UPDATE employees SET salary = salary * (1+ 
		#{raise}/100) WHERE employee_id = #{empId} </update> -->
<!-- 자재발주 수정 -->
	<update id="updateMatOrderInfo" parameterType="MatVO">
		UPDATE rsc_ordr
		<set>
			<if test="ordrCd != null and !ordrCd.equals('')">
				ordr_cd = #{ordrCd},
			</if>
			<if test="ordrReqDt != null and !ordrReqDt.equals('')">
				ordr_req_dt = #{ordrReqDt},
			</if>
			<if test="vendCd != null and !vendCd.equals('')">
				VEND_CD = #{vendCd},
			</if>
			<if test="vendNm != null and !vendNm.equals('')">
				VEND_NM = #{vendNm},
			</if>
			<if test="rscCd != null and !rscCd.equals('')">			
				RSC_CD = #{rscCd},
			</if>
			<if test="rscNm != null and !rscNm.equals('')">
				RSC_NM = #{rscNm},
			</if>
			<if test="ordrCnt > 0">
				ORDR_CNT = #{ordrCnt},
			</if>
			<if test="paprdCmndDt != null and !paprdCmndDt.equals('')">
				PAPRD_CMND_DT = #{paprdCmndDt},
			</if>
			<if test="ordrChk != null and !ordrChk.equals('')">
				ordr_chk = #{ordrChk},
			</if>
		</set>
		WHERE ordr_cd = #{ordrCd}
	</update>
<!-- 자재발주 삭제 -->
	<delete id="deleteMatOrderInfo" parameterType="String">
		DELETE FROM rsc_ordr
		WHERE ordr_cd = #{ordrCd}
	</delete>
	
<!-- 자재 재고 현황 -->
	<select id="matStockList" resultType="MatVO">
		SELECT * 
		  FROM rsc_stc_view     
         ORDER BY RSC_CD
	</select>
	
<!-- 자재입고 현황 -->	
	<select id="matReceiptList" resultType="MatVO">
		SELECT i.rsc_lot_cd
		     , i.rsc_cd
		     , r.rsc_nm
		     , i.ordr_cd
		     , o.ordr_cnt
		     , i.rsc_insp_cd
		     , i.ist_cnt
		     , i.ist_dt
		  FROM rsc_ist i JOIN rsc r ON i.rsc_cd = r.rsc_cd
		  				 LEFT JOIN rsc_ordr o ON i.ordr_cd = o.ordr_cd
		 ORDER BY i.rsc_lot_cd
	</select>
	<!-- 자재입고 등록 -->
	<insert id="insertMatReceipt" parameterType="MatVO">
		INSERT INTO rsc_ist (
		rsc_lot_cd,
		rsc_cd,
		ordr_cd,
		rsc_insp_cd,
		ist_cnt,
		ist_dt
		)
		VALUES (
		'RLT${rscLotCd}',
		#{rscCd},
		#{ordrCd},
		#{rscInspCd},
		#{istCnt},
		#{istDt}
		)
	</insert>
	<!-- 자재입고 수정 -->
	<update id="updateMatReceiptInfo" parameterType="MatVO">
		UPDATE rsc_ist
		<set>
			<if test="rscLotCd != null and !rscLotCd.equals('')">
				rsc_lot_cd = #{rscLotCd},
			</if>
			<if test="rscCd != null and !rscCd.equals('')">
				rsc_cd = #{rscCd},
			</if>
			<if test="ordrCd != null and !ordrCd.equals('')">
				ordr_cd = #{ordrCd},
			</if>
			<if test="rscInspCd != null and !rscInspCd.equals('')">
				rsc_insp_cd = #{rscInspCd},
			</if>
			<if test="istCnt != null and !istCnt.equals('')">			
				ist_cnt = #{istCnt},
			</if>
			<if test="istDt != null and !istDt.equals('')">
				ist_dt = #{istDt},
			</if>
		</set>
		WHERE rsc_lot_cd = #{rscLotCd}
	</update>
	<!-- 자재입고 삭제 -->
	<delete id="deleteMatReceiptInfo" parameterType="String">
		DELETE FROM rsc_ist
		WHERE rsc_lot_cd = #{rscLotCd}
	</delete>

<!-- 자재검사 현황 -->	
	<select id="matCheckList" resultType="MatVO">
		SELECT i.rsc_insp_cd
		     , i.ordr_cd
		     , i.rsc_nm
		     , i.insp_dt
		     , i.insp_tstr
		     , o.ordr_cnt
		     , i.insp_pass_cnt
		     , i.cont
		     , i.decay
		     , i.pack
		     , i.under_weight
		     , i.etc
		  FROM rsc_insp i JOIN rsc_ordr o ON i.ordr_cd = o.ordr_cd
		 ORDER BY rsc_insp_cd DESC
	</select>	
<!-- 검사미완료 발주 전체 조회	 -->
	<select id="matOrderChkList" resultType="MatVO">
		SELECT *
		FROM rsc_ordr
	   WHERE ORDR_CHK != '진행완료'
	   ORDER BY ordr_cd
	</select>
<!-- 검수자 목록 -->			
	<select id="checkerList" resultType="MatVO">
		SELECT *
		FROM emp
	   WHERE job = '품질'
	   ORDER BY name
	</select>
<!-- 자재검사 등록 -->
	<insert id="insertMatCheck" parameterType="MatVO">
  <selectKey keyProperty="rscInspCd" resultType="String" order="BEFORE">
    SELECT CONCAT('RIC', LPAD(NVL(MAX(SUBSTR(rsc_insp_cd, 4)), '0000') + 1, 4, '0'))
    FROM rsc_insp
  </selectKey>
  INSERT INTO rsc_insp (rsc_insp_cd, ordr_cd, rsc_nm, insp_cnt, insp_dt, insp_tstr, insp_pass_cnt, cont, decay, pack, under_weight, etc, etc_explain)
  VALUES (#{rscInspCd}, #{ordrCd}, #{rscNm}, #{inspCnt}, #{inspDt}, #{inspTstr}, #{inspPassCnt}, #{cont}, #{decay}, #{pack}, #{underWeight}, #{etc}, #{etcExplain})
</insert>

<!-- <insert id="insertMatCheck" parameterType="MatVO">
  
  INSERT INTO rsc_insp (ordr_cd, rsc_nm, insp_cnt, insp_dt, insp_tstr, insp_pass_cnt, cont, decay, pack, under_weight, etc, etc_explain)
  VALUES (#{ordrCd}, #{rscNm}, #{inspCnt}, #{inspDt}, #{inspTstr}, #{inspPassCnt}, #{cont}, #{decay}, #{pack}, #{underWeight}, #{etc}, #{etcExplain})
</insert>   -->  
</mapper>